# 尺度空间极值点和极值点定位

# 尺度空间极值检测
# 在不同的尺度空间是不能使用相同的窗口检测极值点，对小的关键点使用小的窗口，对大的关键点使用大的窗口
# 为了达到上述目的，我们使用空间尺度滤波器
# 而高斯核是唯一可以产生多尺度空间的核函数
# 一个图像的尺度空间L(x, y, σ)=G(x, y, σ)*I(x, y)
# σ是尺度空间因子，它决定了图像的模糊程度，在大尺度下（σ值大）表现的是图像的概貌信息，在小尺度下（σ值小）表现的是图像的细节信息
# 在计算高斯函数的离散近似时，大概3σ距离之外的像素都可以看作不起作用，这些像素的计算也就可以忽略
# 所以，在实际应用中，只计算(6σ+1)*(6σ+1)的高斯卷积核就可以保证相关像素影响
# 我们构建图像的高斯金字塔，它采用高斯函数进行模糊以及降采样处理得到的
# 高斯金字塔构建过程中，首先将图像扩大一倍，在扩大的图像基础之上构建高斯金字塔
# 然后对该尺度下图像进行高斯模糊，几幅模糊之后的图像集合构成了一个Octave（一个Octave有六层图像，尺寸相同，模糊程度不同）
# 一般来说第一层图像的模糊系数σ=为1.6，考虑到相机已对图像进行σ=0.5的模糊，故实际的σ0=1.52
# 然后对该Octave下选择一幅图像进行下采样，长和宽分别缩短一倍，图像面积变为原来四分之一（即下一组的第一层图像是上一组倒数第三层图像进行降采样的图像）
# 这幅图像就是下一个Octave的初始图象，在初始图象的基础上完成属于这个Octave的高斯模糊处理
# 以此类推完成整个算法所需要的所有八度构建，这样这个高斯金字塔就构建出来了
# 金字塔层数的计算公式：O=log2[min(M, N)]-2
# 利用LoG（高斯拉普拉斯方法），即图像的二阶导数（变化值最大过零点），可以在不同尺度下检测图像的关键点信息，从而确定图像的特征点
# 但LoG的计算量大，效率低
# 所以我们通过两个相邻的高斯尺度空间的图像的相减，得到DoG（高斯差分）来近似LoG
# 为了计算DoG我们构建高斯差分金字塔，该金字塔是在上述的高斯金字塔的基础上构建而成的
# 建立过程是：在高斯金字塔中每个Octave中相邻两层相减就构成了高斯差分金字塔
# 高斯差分金字塔的第一组第一层是由高斯金字塔的第一组第二层减第一组第一层得到的
# 以此类推，逐组逐层生成每一个差分图像，所有差分图像构成差分金字塔
# 概括为DoG金字塔的第o组第i层图像是由高斯金字塔的的第o组第i+1层减第o组第i层得到的
# 后续SIFT特征点的提取都是在DoG金字塔上进行的
# 在DoG完成之后，就可以在不同的尺度空间搜索局部最大值了
# 对于图像中的一个像素点而言，他需要与自己周围8邻域，以及尺度空间上上下两层中相邻的18个点相比
# 如果是局部最大值，他就可能是一个关键点
# 基本上来说关键点是图像在相应尺度空间中的最好代表
# 搜索过程从每组的第二层开始，以第二层为当前层，对第二层的DoG图像中的每个点取一个3*3的立方体，立方体上下层为第一层与第三层
# 这样，搜索得到的极值点既有位置坐标又有空间尺度坐标
# 当第二层搜索完成后，在以第三层作为当前层，其过程与第二层搜索类似，当S=3时，每组里面要搜索三层，所以在DoG中就有S+2层，在初始构建的金字塔中每组有S+3层

# 关键点定位
# 由于DoG对噪音和边缘比较敏感，因此在上面高斯差分金字塔中检测到的局部极值点需经过进一步的校验才能精确定位为特征点
# 使用尺度空间的泰勒级数展开来获得极值的准确位置，如果极值点的灰度值小于阈值（一般为0.03或0.04）就会被忽略掉
# 在OpenCV中这种阈值被称为contrastThreshold
# DoG算法对边界非常敏感，所以我们必须要把边界去除
# Harris算法可以用于角点检测之外还可以用于检测边界
# 从Harris角点检测的算法中，当一个特征值远远大于另外一个特征值时检测到的是边界
# 在DoG算法中欠佳的关键点在平行边缘的方向有较大的主曲率，而在垂直于边缘的方向有较小的曲率，两者的比值如果高于某个阈值（在OpenCV中叫做边界阈值），就认为该关键点为边界，将被忽略，一般将该阈值设置为10
# 将低对比度和边界的关键点去除，得到的就是我们你感兴趣的关键点
